name: Discord PR Notifications

on:
  pull_request:
    types: [opened, closed, reopened]

jobs:
  notify_discord:
    runs-on: ubuntu-latest
    steps:
      - name: Extract PR context
        id: context
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title;
            const author = pr.user.login;
            const projectName = context.payload.repository.full_name;
            const action = context.payload.action;
            
            console.log(`Action: ${action}`);
            console.log(`PR Title: ${prTitle}`);
            console.log(`PR Creator: ${prCreator}`);
            console.log(`Repository Name: ${repositoryName}`);
            
            return { title: title, creator: author, repository: projectName, action: action }

      - name: Send Discord Notification
        uses: discord/action@v1
        with:
          webhook_id: ${{ secrets.ACTIVITY_DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.ACTIVITY_DISCORD_WEBHOOK_TOKEN }}
          content: >
            ${{ if eq(steps.context.outputs.action, 'opened') }} 
              "üõ†Ô∏è[New Pull Request] ${steps.context.outputs.title}\nProject: ${steps.context.outputs.repository}\nAuthor: ${steps.context.outputs.creator}\nLink: ${{ github.event.pull_request.html_url }}"
            ${{ else if eq(steps.context.outputs.action, 'closed') }}
              "‚úÖ[Pull Request Closed] ${steps.context.outputs.title}\nProject: ${steps.context.outputs.repository}\nAuthor: ${steps.context.outputs.creator}\nLink: ${{ github.event.pull_request.html_url }}"
            ${{ else if eq(steps.context.outputs.action, 'reopened') }}
              "üõ†Ô∏è[Pull Request Reopened] ${steps.context.outputs.title}\nProject: ${steps.context.outputs.repository}\nAuthor: ${steps.context.outputs.creator}\nLink: ${{ github.event.pull_request.html_url }}""
            ${{ endif }}
