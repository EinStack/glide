name: release

on:
  push:
    tags:
      - "*"
# TODO: uncomment the lines below after tests
#    branches:
#      - main

permissions:
  contents: write
  packages: write

jobs:
  build_time:
    outputs:
      BUILD_TIME: ${{ steps.build_time.outputs.BUILD_TIME }}
    runs-on: ubuntu-latest
    steps:
      - id: build_time
        run: echo 'BUILD_TIME=date -u +"%Y-%m-%dT%H:%M:%SZ"' >> "$GITHUB_OUTPUT"
# TODO: uncomment after tests
#  lint:
#    uses: ./.github/workflows/lint.yaml
#  vuln:
#    uses: ./.github/workflows/vuln.yaml
  release:
#    needs:
#      - lint
#      - vuln
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

#      - name: Run GoReleaser
#        uses: goreleaser/goreleaser-action@v5
#        with:
#          distribution: goreleaser
#          version: latest
#          args: release --clean
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  images:
    strategy:
      matrix:
        image:
          - alpine
          - ubuntu
          - distroless
          - redhat
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
# TODO: uncomment after tests
#      - name: login into Github Container Registry
#        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: build ${{ matrix.image }} image
        working-directory: ./images
        env:
          BUILD_TIME: ${{needs.build_time.outputs.build_time}}
        run: VERSION=${{ github.ref_name }} COMMIT=$(git rev-parse --short "$GITHUB_SHA") BUILD_DATE="$BUILD_TIME" make ${{ matrix.image }}

      - name: publish ${{ matrix.image }} image to Github Container Registry
        working-directory: ./images
        run: VERSION=${{ github.ref_name }} make publish-ghcr-${{ matrix.image }}
