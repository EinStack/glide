basePath: /
definitions:
  schemas.ChatMessage:
    properties:
      content:
        description: The content of the message.
        type: string
      name:
        description: |-
          The name of the author of this message. May contain a-z, A-Z, 0-9, and underscores,
          with a maximum length of 64 characters.
        type: string
      role:
        description: The role of the author of this message. One of system, user,
          or assistant.
        type: string
    required:
    - content
    - role
    type: object
  schemas.ChatRequest:
    properties:
      message:
        $ref: '#/definitions/schemas.ChatMessage'
      message_history:
        items:
          $ref: '#/definitions/schemas.ChatMessage'
        type: array
      override:
        $ref: '#/definitions/schemas.OverrideChatRequest'
    required:
    - message
    type: object
  schemas.ChatResponse:
    properties:
      cached:
        type: boolean
      created_at:
        type: integer
      id:
        type: string
      model_id:
        type: string
      model_name:
        type: string
      model_response:
        $ref: '#/definitions/schemas.ModelResponse'
      provider:
        type: string
      router_id:
        type: string
    type: object
  schemas.Error:
    properties:
      message:
        type: string
      name:
        type: string
    type: object
  schemas.HealthSchema:
    properties:
      healthy:
        type: boolean
    type: object
  schemas.ModelResponse:
    properties:
      message:
        $ref: '#/definitions/schemas.ChatMessage'
      metadata:
        additionalProperties:
          type: string
        type: object
      token_usage:
        $ref: '#/definitions/schemas.TokenUsage'
    type: object
  schemas.OverrideChatRequest:
    properties:
      message:
        $ref: '#/definitions/schemas.ChatMessage'
      model_id:
        type: string
    required:
    - message
    - model_id
    type: object
  schemas.RouterListSchema:
    properties:
      routers:
        items: {}
        type: array
    type: object
  schemas.TokenUsage:
    properties:
      prompt_tokens:
        type: integer
      response_tokens:
        type: integer
      total_tokens:
        type: integer
    type: object
externalDocs:
  description: Documentation
  url: https://glide.einstack.ai/
host: localhost:9099
info:
  contact:
    email: contact@einstack.ai
    name: EinStack Community
    url: https://github.com/EinStack/glide/
  description: API documentation for Glide, an open-source lightweight high-performance
    model gateway
  license:
    name: Apache 2.0
    url: https://github.com/EinStack/glide/blob/develop/LICENSE
  title: Glide
  version: 0.0.1
paths:
  /v1/health/:
    get:
      consumes:
      - application/json
      operationId: glide-health
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.HealthSchema'
      summary: Gateway Health
      tags:
      - Operations
  /v1/language/:
    get:
      consumes:
      - application/json
      description: Retrieve list of configured active language routers and their configurations
      operationId: glide-language-routers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.RouterListSchema'
      summary: Language Router List
      tags:
      - Language
  /v1/language/{router}/chat:
    post:
      consumes:
      - application/json
      description: Talk to different LLM Chat APIs via unified endpoint
      operationId: glide-language-chat
      parameters:
      - description: Router ID
        in: path
        name: router
        required: true
        type: string
      - description: Request Data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/schemas.ChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ChatResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.Error'
      summary: Language Chat
      tags:
      - Language
  /v1/language/{router}/chatStream:
    get:
      consumes:
      - application/json
      description: Talk to different LLM Stream Chat APIs via a unified websocket
        endpoint
      operationId: glide-language-chat-stream
      parameters:
      - description: Router ID
        in: path
        name: router
        required: true
        type: string
      - description: Websocket Connection Type
        in: header
        name: Connection
        required: true
        type: string
      - description: Upgrade header
        in: header
        name: Upgrade
        required: true
        type: string
      - description: Websocket Security Token
        in: header
        name: Sec-WebSocket-Key
        required: true
        type: string
      - description: Websocket Security Token
        in: header
        name: Sec-WebSocket-Version
        required: true
        type: string
      responses:
        "101":
          description: Switching Protocols
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.Error'
        "426":
          description: Upgrade Required
      summary: Language Chat
      tags:
      - Language
schemes:
- http
swagger: "2.0"
